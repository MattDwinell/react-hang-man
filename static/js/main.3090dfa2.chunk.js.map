{"version":3,"sources":["Components/Button.js","Components/Header.js","Components/Letter.js","Components/Word.js","App.js","reportWebVitals.js","index.js"],"names":["Button","gameInProgress","onClick","className","Header","title","toggleGame","defaultProps","Letter","letter","Word","letters","split","map","l","i","toUpperCase","propTypes","App","useState","Words","setLetters","setGameInProgress","React","useEffect","document","getElementById","getAttribute","window","addEventListener","event","checkLetter","setAttribute","console","log","e","key","onKeyUp","chosenWord","Math","floor","random","length","chooseWord","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"uLAgBeA,EAdD,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,QAE5B,OACS,wBAAQA,QAAWA,EAASC,UAAY,MAAxC,SAA+CF,EAAiB,aAAe,gBCHtFG,EAAS,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,MAAOJ,EAAgC,EAAhCA,eAAgBK,EAAgB,EAAhBA,WAIpC,OACI,yBAAQH,UAAY,SAApB,UACI,mCAAME,KACN,cAAC,EAAD,CAAQH,QAAWI,EAAYL,eAAkBA,QAU7DG,EAAOG,aAAe,CAACF,MAAO,UAAWJ,gBAAgB,GAE1CG,QCbAI,EARA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACb,OACI,sBAAMN,UAAY,SAAlB,SACKM,KCFPC,EAAM,SAAC,GAAc,IAAbC,EAAY,EAAZA,QAIV,OAHc,MAAXA,IACCA,EAAU,gBAGV,qBAAKR,UAAY,gBAAjB,SACKQ,EAAQC,MAAM,IAAIC,KAAI,SAACC,EAAGC,GAAJ,OAAS,cAAC,EAAD,CAAQN,OAAQK,EAAEE,eAAoBD,SAMlFP,EAAOS,UAAY,GAGnBP,EAAKH,aAAe,CAChBI,QAAU,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAK,IAAI,IAAI,IAAI,IAAI,IAAI,MAG7CD,QCoDAQ,MA/Cf,WAAe,IAAD,EACIC,mBAAS,CAAC,UAAW,cAAe,UAAW,WAAY,WAApEC,EADK,sBAEiBD,mBAAS,CAAC,UAF3B,mBAENR,EAFM,KAEGU,EAFH,OAG+BF,oBAAS,GAHxC,mBAGNlB,EAHM,KAGUqB,EAHV,KAqBdC,IAAMC,WAAU,WACmD,SAA7DC,SAASC,eAAe,QAAQC,aAAa,cAC7CC,OAAOC,iBAAiB,SAAS,SAACC,GAC1BC,EAAYD,MAElBL,SAASC,eAAe,QAAQM,aAAa,WAAY,QACzDC,QAAQC,IAAI,+BAKlB,IAAMH,EAAc,SAACI,GAClBlC,GAAiBgC,QAAQC,IAAIC,EAAEC,MAGlC,OACE,sBAAKjC,UAAY,YAAYkC,QAAWN,EAAxC,UACE,cAAC,EAAD,CAAQzB,WA1BO,WACjB2B,QAAQC,IAAI,0BAA4BjC,GACrCA,EAAgBqB,GAAkB,IAElCA,GAAkB,GAXJ,WACjBW,QAAQC,IAAId,GACZ,IAAIkB,EAAalB,EAAMmB,KAAKC,MAAMD,KAAKE,SAAWrB,EAAMsB,SACxDrB,EAAWiB,GACXL,QAAQC,IAAIvB,GAQTgC,IAEHV,QAAQC,IAAIjC,IAmBwBA,eAAkBA,IACpD,cAAC,EAAD,CAAMU,QAAWV,EAAiBU,EAAU,WCpDnCiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IAAQ7B,SAASC,eAAe,SAMpCkB,K","file":"static/js/main.3090dfa2.chunk.js","sourcesContent":["import propTypes from 'prop-types'\r\n\r\nconst Button =({gameInProgress, onClick}) => {\r\n\r\n    return (\r\n             <button onClick = {onClick} className = 'btn'>{gameInProgress ? 'Reset Game' : 'Start Game'}</button>\r\n    )\r\n}\r\n// Button.defaultProps = {\r\n//     gameInProgress: false\r\n// }\r\n\r\nButton.propTypes = {\r\ngameInProgress : propTypes.bool\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nconst Header = ({title, gameInProgress, toggleGame}) => {\r\n\r\n\r\n\r\n    return (\r\n        <header className = 'header'>\r\n            <h1> {title}</h1>\r\n            <Button onClick = {toggleGame} gameInProgress = {gameInProgress}/>\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\ntitle: PropTypes.string,\r\ngameInProgress: PropTypes.bool\r\n}\r\nHeader.defaultProps = {title: 'hangman', gameInProgress: false}\r\n\r\nexport default Header\r\n","const Letter = ({letter}) => {\r\n    return (\r\n        <span className = 'letter'>\r\n            {letter} \r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Letter\r\n","import Letter from './Letter'\r\nconst Word =({letters})=> {\r\n    if(letters == null){\r\n        letters = 'Press Start!';\r\n    }\r\n    return (\r\n        <div className = 'letterWrapper'>\r\n            {letters.split('').map((l, i)=>(<Letter letter={l.toUpperCase()} key={i}/>))}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nLetter.propTypes = {\r\n\r\n}\r\nWord.defaultProps = {\r\n    letters : ['P','R','E','S','S',' ', 'S','t','a','r','t','!',]\r\n}\r\n\r\nexport default Word\r\n\r\n","import React from 'react';\nimport Header from './Components/Header'\nimport Word from './Components/Word'\nimport {useState} from 'react'\n\n/*function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  ); \n}*/\nfunction App(){\n  const [Words] = useState(['Anodyne', 'Melancholia', 'Aphasia', 'burbling', 'zaftig'])\n  const[letters, setLetters] = useState(['merry'])\n  const[gameInProgress, setGameInProgress] = useState(false);\n\n  const chooseWord = ()=>{\n    console.log(Words);\n    let chosenWord = Words[Math.floor(Math.random() * Words.length)]\n    setLetters(chosenWord);\n    console.log(letters);\n  }\n\n  const toggleGame = ()=>{\n    console.log('in toggle game function' + gameInProgress);\n    if(gameInProgress){setGameInProgress(false);\n    }else{\n       setGameInProgress(true);\n       chooseWord();\n    }\n    console.log(gameInProgress);\n  }\nReact.useEffect(()=>{\n  if (document.getElementById('root').getAttribute('listener') !== 'true') {\n      window.addEventListener('keyup', (event)=>{\n              checkLetter(event);\n  })\n        document.getElementById('root').setAttribute('listener', 'true');\n        console.log('event has been attached');\n   }\n\n\n})\n  const checkLetter = (e)=>{\n  if(gameInProgress)  console.log(e.key);\n  };\n\n  return(\n    <div className = 'container' onKeyUp = {checkLetter}>\n      <Header toggleGame = {toggleGame} gameInProgress = {gameInProgress}/>\n      <Word letters= { gameInProgress ? letters : null}/>\n    </div>\n  )  \n\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}